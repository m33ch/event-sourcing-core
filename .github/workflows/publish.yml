name: Publish to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  publish:
    name: Publish Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: Check if Code Has Changed
        id: check_code_changes
        run: |
            if git diff --name-only HEAD~1 | grep -vE 'README.md|CONTRIBUTING.md|CODE_OF_CONDUCT.md'; then
              echo "code_changed=true" >> $GITHUB_ENV
            else
              echo "code_changed=false" >> $GITHUB_ENV
            fi

      - name: Determine Version Type
        if: env.code_changed == 'true'
        run: |
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              echo "VERSION_TYPE=${{ github.event.inputs.version_type }}" >> $GITHUB_ENV
            else
              if git log -1 --pretty=%B | grep -q 'BREAKING CHANGE'; then
                echo "VERSION_TYPE=major" >> $GITHUB_ENV
              elif git log -1 --pretty=%B | grep -q 'feat:'; then
                echo "VERSION_TYPE=minor" >> $GITHUB_ENV
              else
                echo "VERSION_TYPE=patch" >> $GITHUB_ENV
              fi
            fi

      - name: Install Dependencies
        if: env.code_changed == 'true'
        run: yarn install --frozen-lockfile

      - name: Run Tests
        if: env.code_changed == 'true'
        run: yarn test

      - name: Configure Git
        if: env.code_changed == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Bump Version
        if: env.code_changed == 'true'
        run: |
          yarn version --${{ env.VERSION_TYPE }}
          git push --follow-tags

      - name: Build Package
        if: env.code_changed == 'true'
        run: yarn build

      - name: Publish to npm
        if: env.code_changed == 'true'
        run: npm publish --access public
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get Latest Tag
        if: env.code_changed == 'true'
        id: get_tag
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.code_changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          generate_release_notes: true
